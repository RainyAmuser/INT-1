# -*- coding: utf-8 -*-
"""Bharat Intern SMS Classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/140fa4DitI2mkISmqotppivN9e-zgmpdm
"""

import pandas as pd

from google.colab import files
data = files.upload()

df = pd.read_csv("spam.csv",delimiter = ',',encoding = 'latin-1')

df.head()

df.info()

df.drop(columns=['Unnamed: 2','Unnamed: 3','Unnamed: 4'],inplace = True)

df.rename(columns={'v1':'target','v2':'text'},inplace = True)

from sklearn.preprocessing import LabelEncoder
encoder = LabelEncoder()

df['target'] = encoder.fit_transform(df['target'])

df.info()

import nltk

nltk.download('stopwords')

from nltk.corpus import stopwords

stopwords.words('english')

from nltk.stem.porter import PorterStemmer
ps = PorterStemmer()
print(ps.stem('lovely'))
print(ps.stem('loved'))

import re
re.sub('[^a-zA-Z]',' ',df['text'][2]).lower().split()

lst1 = []
for i in range(0,5572):
    text = re.sub('[^a-zA-Z]',' ',df['text'][i])
    text = text.lower()
    text = text.split()
    v = [ps.stem(word) for word in text if not word in stopwords.words('english')]
    v = ' '.join(v)
    lst1.append(v)

df['text'][0]

lst1

from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer()
x = cv.fit_transform(lst1)

x

x = cv.fit_transform(lst1).toarray()

x

x.shape

y = df['target'].values

y

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.30,random_state=40)

# Fitting Logistic Regression to the Training set
from sklearn.linear_model import LogisticRegression
lr = LogisticRegression()
lr.fit(x_train,y_train)

pred = lr.predict(x_test)

# Making the Confusion Matrix
from sklearn.metrics import confusion_matrix,accuracy_score

print(confusion_matrix(y_test,pred))

((1455+193)/1672)*100

print(accuracy_score(y_test,pred))